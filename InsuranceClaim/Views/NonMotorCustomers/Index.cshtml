@model InsuranceClaim.Models.BrokerCustomersModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_InsuranceMain.cshtml";
    //userLoggedin = (System.Web.HttpContext.Current.User != null) && System.Web.HttpContext.Current.User.Identity.IsAuthenticated && ViewBag.CurrentUserRole != "Staff";

    string email = "";
    string disableClass = "";
    //if (Session["CustomerDataModal"] != null)
    //{
    //    var customerDetail = (InsuranceClaim.Models.CustomerModel)Session["CustomerDataModal"];
    //    email = customerDetail.EmailAddress;
    //    disableClass = "non-editable";
    //}
}

<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet" />

<div class="top-banner-section">
    <div class="container">
        <div class="car-insurance-content">
            <h2>Get Insurance In Less<br>Than 5 Minutes</h2>
        </div>
    </div>
</div>

<div class="body-content-section">
    @*<div class="Process-step-section">
            <div class="container">
                <div class="row bs-wizard">

                </div>
            </div>
        </div>*@

    <div class="form-section-top">
        <div class="container">
            <div class="row bs-wizard">
                <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                    <div class="Process-step-section  process-block">
                        <div class="col-sm-12 bs-wizard-step active">
                            <div class="progress"><div class="progress-bar"></div></div>
                            <a href="#" class="bs-wizard-dot"></a>
                            <div class="text-center bs-wizard-stepnum">Quotation Customer Details</div>
                        </div>

                        @*<div class="col-xs-2 bs-wizard-step disabled">
                                 complete
                                <div class="progress"><div class="progress-bar"></div></div>
                                <a href="#" class="bs-wizard-dot"></a>
                                <div class="text-center bs-wizard-stepnum">Product Details</div>
                            </div>*@

                        <div class="col-sm-12 bs-wizard-step disabled">
                            <!-- complete -->
                            <div class="progress"><div class="progress-bar"></div></div>
                            <a href="#" class="bs-wizard-dot"></a>
                            <div class="text-center bs-wizard-stepnum">Product Details</div>
                        </div>
                    </div>
                </div>

                <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 form-section-col">
                    <div class="form-group-section">
                        <div class="form-title">
                            <h4>Customer Details</h4>
                        </div>


                        <div class="form-group-input">
                            @using (Html.BeginForm("AddCustomer", "NonMotorCustomers", FormMethod.Post))
                            {
                                <input type="hidden" id="clinetId" name="clinetId" />
                                @Html.HiddenFor(x => x.Id)
                                @Html.HiddenFor(x => x.UserID)

                                <div class="radio-border-bottom">
                                    <div class="row">
                                    <div class="col-md-12 form-group-text">
                                        <div class="form-group">
                                            @Html.LabelFor(x => x.CustomerType, new { @class = "gender-label" })
                                            <div class="form-group-label">
                                                <label>@Html.RadioButtonFor(model => model.CustomerType, "Business", new { @checked = "checked" })<span class="outside"><span class="inside"></span></span><strong>Business</strong></label>
                                                <label>@Html.RadioButtonFor(model => model.CustomerType, "Individual")<span class="outside"><span class="inside"></span></span><strong>Individual</strong></label>
                                            </div>
                                            @Html.ValidationMessageFor(x => x.CustomerType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                </div>

                                <div id="BusinessId">

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.BusinessName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.BusinessName, new { @class = "form-control", @name = "BusinessName", @autocomplete = "off", @id = "BusinessName", @placeholder = "Business Name" })
                                                @Html.ValidationMessageFor(x => x.BusinessName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.BusinessPartnerNumber, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.BusinessPartnerNumber, new { @class = "form-control", @name = "BusinessPartnerNumber", @id = "BusinessPartnerNumber", @autocomplete = "off", @placeholder = "Business Partner Number" })
                                                @Html.ValidationMessageFor(x => x.BusinessPartnerNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.BusinessAddress, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.BusinessAddress, new { @class = "form-control", @name = "BusinessAddress", @autocomplete = "off", @id = "BusinessAddress", @placeholder = "Business Address" })
                                                @Html.ValidationMessageFor(x => x.BusinessAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.BusinessPhoneNumber, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.BusinessPhoneNumber, new { @class = "form-control", @name = "BusinessPhoneNumber", @id = "BusinessPhoneNumber", @autocomplete = "off", @placeholder = "Business Phone Number" })
                                                @Html.ValidationMessageFor(x => x.BusinessPhoneNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.ContactPersonName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.ContactPersonName, new { @class = "form-control", @name = "ContactPersonName", @autocomplete = "off", @id = "ContactPersonName", @placeholder = "Contact Person Name" })
                                                @Html.ValidationMessageFor(x => x.ContactPersonName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-sm-6 col-md-6 form-group-text">
                                                <div class="form-group">
                                                    @Html.LabelFor(x => x.ContactPersonEmail, new { @class = "gender-label" })
                                                    @Html.TextBoxFor(x => x.ContactPersonEmail, new { @class = "form-control", @name = "ContactPersonEmail", @autocomplete = "off", @id = "ContactPersonEmail", @placeholder = "Contact Person Email" })
                                                    @Html.ValidationMessageFor(x => x.ContactPersonEmail, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>


                                    </div>

                                    <div class="row">
                                        <div class="col-sm=6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.ContactPersonPhoneNumber, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.ContactPersonPhoneNumber, new { @class = "form-control", @name = "ContactPersonPhoneNumber", @id = "ContactPersonPhoneNumber", @autocomplete = "off", @placeholder = "Contact Person Phone Number" })
                                            </div>
                                        </div>





                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                            
                                              
                                            </div>
                                        </div>
                                    </div>
                                </div>
                               

                                <div id="IndividualId" style="display: none;">

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.FirstName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @name = "FirstName", @autocomplete = "off", @id = "FirstName", @placeholder = "First Name" })
                                                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.SurName, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.SurName, new { @class = "form-control", @name = "SurName", @id = "SurName", @autocomplete = "off", @placeholder = "Last Name" })
                                                @Html.ValidationMessageFor(x => x.SurName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">

                                        <div class="col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.Gender, new { @class = "gender-label" })
                                                <div class="form-group-label">
                                                    <label>@Html.RadioButtonFor(model => model.Gender, "Male", true)<span class="outside"><span class="inside"></span></span><strong>Male</strong></label>
                                                    <label>@Html.RadioButtonFor(model => model.Gender, "Female", true)<span class="outside"><span class="inside"></span></span><strong>Female</strong></label>
                                                </div>
                                                @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.DateOfBirth, new { @class = "gender-label" })
                                                <div class="form-group-label">

                                                    <div class='input-group' id='datetimepicker1'>
                                                        @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control", @autocomplete = "off", @placeholder = "DOB" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                    @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                       
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.Label("National Identification Number", new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.NationalIdentificationNumber, new { @class = "form-control", @name = "NationalIdentificationNumber", @autocomplete = "off", @id = "NationalIdentificationNumber", @placeholder = "National Identification Number" })
                                                @Html.ValidationMessageFor(x => x.NationalIdentificationNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.ContactNumber, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control",@name = "ContactNumber", @id = "ContactNumber", @autocomplete = "off", @placeholder = "Contact Number" })
                                                @Html.ValidationMessageFor(x => x.ContactNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.Email, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @name = "ContactPersonEmail", @autocomplete = "off", @id = "ContactPersonEmails", @placeholder = "Email Address" })
                                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })

                                                <span id="email-error" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 form-group-text">
                                            <div class="form-group">
                                                @Html.LabelFor(x => x.PhysicalAddress, new { @class = "gender-label" })
                                                @Html.TextBoxFor(x => x.PhysicalAddress, new { @class = "form-control", @name = "PhysicalAddress", @autocomplete = "off", @id = "PhysicalAddress", @placeholder = "Physical Address" })
                                                @Html.ValidationMessageFor(x => x.PhysicalAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-md-12 next-btn">
                                    <div class="row">
                                        <div class="col-sm-6 col-md-6">

                                        </div>
                                        <div class="col-sm-6 col-md-6">
                                            <div class="text-right">
                                                <button type="submit" id="buttonNext" class="btn">Next</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<script type="text/javascript">

    var areasArray = [];

    function removeValidation(e) {

        if (e.value != "") {
            $(".valMessage").text('');
        } else {
            $(".valMessage").text('The City field is required.');

        }
    }
    function isNumber(evt) {

        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }


    $(document).ready(function () { // will trigger when the document is ready


        //$("#City").select2();
        //$("#CountryCode").select2();

        $('#datetimepicker1').datetimepicker({
            format: 'MM/D/YYYY',
            maxDate: new Date()
        });

        var errorMessage = $('#ErrorMessage').val();
        if (errorMessage != null && errorMessage != '') {
            toastr.error(errorMessage)
        }
          getAreas();

        $("#AddressLine2").autocomplete({
            source: areasArray

        });

    //Individuals Email check validation
        $(document).on('blur', '#ContactPersonEmails', function () {
            debugger
            var email = $(this).val();
            $.ajax({
                url: '@Url.Action("CheckEmailExists", "NonMotorCustomers")',
                type: 'POST',
                data: { email: email },
                success: function (response) {
                    if (response.exists) {
                        $("#ContactPersonEmails").val('');
                        toastr.error(response.errorMessage);
                    } else {
                        $('#email-error').text('');
                    }
                }
            });
        });
    });



        //Individuals Email check validation
    $(document).on('blur', '#ContactPersonEmail', function () {
            debugger
            var email = $(this).val();
            $.ajax({
                url: '@Url.Action("CheckEmailExists", "NonMotorCustomers")',
                type: 'POST',
                data: { email: email },
                success: function (response) {
                    if (response.exists) {
                        $("#ContactPersonEmail").val('');
                        toastr.error(response.errorMessage);
                    } else {
                        $('#email-error').text('');
                    }
                }
            });
        });



    function getAreas() {

        $.ajax({
            url: "/CustomerRegistration/GetAreasList",
            type: "POST",
            async: true,
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    areasArray.push(data[i].name);
                }

            }
        })
    };


    $(document).ready(function () { // will trigger when the document is ready

        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!

        var yyyy = today.getFullYear();
        maxDate: today
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }

        var today = mm + '/' + dd + '/' + yyyy;

        if ('Session["CustomerDataModal"]' == null)
        {
            $("#DateOfBirth").val(today);
        }
    });



    function GetVehicleMake() {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: "@Url.Action("GetVehicleMake1", "CustomerRegistration")",
            //url: "/CustomerRegistration/GetVehicleMake",
            dataType: "json",
            success: function (Result) {

                $.each(Result, function (key, value) {
                    $("#Make2").append($("<option></option>").val
                    (value.MakeCode).html(value.MakeDescription));
                });

            },
            error: function (Result) {
                alert("Error");
            }
        });
    }





    function SetCustomerEmail() {
        if ($("#IsCustomEmail").prop("checked") == true) {
            $.ajax({
                url: "@Url.Action("GetCustomerId", "CustomerRegistration")",
                type: "POST",
                dataType: "json",
                success: function (result) {
                    $("#EmailAddress").val(result);
                }
            });
        }
        else {
            $("#EmailAddress").val('');
        }
    }

    function ShowBuisness() {
        debugger
        var getid = document.getElementById("Id");
        if (name == "one") {
            console.log("Choice: ", name);
            document.getElementById("one-variable-equations").checked = true;
            document.getElementById("multiple-variable-equations").checked = false;

        } else if (name == "multiple") {
            console.log("Choice: ", name);
            document.getElementById("multiple-variable-equations").checked = true;
            document.getElementById("one-variable-equations").checked = false;
        }
    }


    $('input[name="CustomerType"]').on('change', function () {
        var selectedValue = $('input[name="CustomerType"]:checked').val();
        debugger
        if (selectedValue === "Business") {
            $('#BusinessId').show();
            $('#IndividualId').hide();
        } else if (selectedValue === "Individual") {
            $('#BusinessId').hide();
            $('#IndividualId').show();
        }
    });

</script>


